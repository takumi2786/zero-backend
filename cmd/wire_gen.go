// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/jmoiron/sqlx"
	"github.com/takumi2786/zero-backend/internal/driver"
	"github.com/takumi2786/zero-backend/internal/interface/controller"
	"github.com/takumi2786/zero-backend/internal/interface/repository"
	"github.com/takumi2786/zero-backend/internal/usecase"
	"go.uber.org/zap"
	"time"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func InitializeLoginController(logger *zap.Logger, db *sqlx.DB) *controller.LoginController {
	userRepository := repository.NewUserRepository(db)
	authUserRepository := repository.NewAuthUserRepository(db)
	tokenGenerator := driver.NewJWTTokenGenerator()
	loginUsecase := usecase.NewLoginInteractor(logger, userRepository, authUserRepository, tokenGenerator)
	loginController := controller.NewLoginController(logger, loginUsecase)
	return loginController
}

func InitializePostController(logger *zap.Logger, db *sqlx.DB, ontextTimeout time.Duration) *controller.PostController {
	postRepository := repository.NewPostRepository(db)
	postUsecase := usecase.NewPostInteractor(postRepository, ontextTimeout)
	postController := controller.NewPostController(logger, postUsecase)
	return postController
}
